/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Datatype;
import org.openapitools.client.model.FilterPipeline;

/**
 * Attribute of array
 */
@ApiModel(description = "Attribute of array")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class Attribute {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Datatype type;

  public static final String SERIALIZED_NAME_FILTER_PIPELINE = "filterPipeline";
  @SerializedName(SERIALIZED_NAME_FILTER_PIPELINE)
  private FilterPipeline filterPipeline;

  public static final String SERIALIZED_NAME_CELL_VAL_NUM = "cellValNum";
  @SerializedName(SERIALIZED_NAME_CELL_VAL_NUM)
  private Integer cellValNum;

  public static final String SERIALIZED_NAME_NULLABLE = "nullable";
  @SerializedName(SERIALIZED_NAME_NULLABLE)
  private Boolean nullable;

  public static final String SERIALIZED_NAME_FILL_VALUE = "fillValue";
  @SerializedName(SERIALIZED_NAME_FILL_VALUE)
  private List<Integer> fillValue = null;

  public Attribute() { 
  }

  public Attribute name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Attribute name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "attribute1", required = true, value = "Attribute name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Attribute type(Datatype type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Datatype getType() {
    return type;
  }


  public void setType(Datatype type) {
    this.type = type;
  }


  public Attribute filterPipeline(FilterPipeline filterPipeline) {
    
    this.filterPipeline = filterPipeline;
    return this;
  }

   /**
   * Get filterPipeline
   * @return filterPipeline
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public FilterPipeline getFilterPipeline() {
    return filterPipeline;
  }


  public void setFilterPipeline(FilterPipeline filterPipeline) {
    this.filterPipeline = filterPipeline;
  }


  public Attribute cellValNum(Integer cellValNum) {
    
    this.cellValNum = cellValNum;
    return this;
  }

   /**
   * Attribute number of values per cell
   * @return cellValNum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1", required = true, value = "Attribute number of values per cell")

  public Integer getCellValNum() {
    return cellValNum;
  }


  public void setCellValNum(Integer cellValNum) {
    this.cellValNum = cellValNum;
  }


  public Attribute nullable(Boolean nullable) {
    
    this.nullable = nullable;
    return this;
  }

   /**
   * Is attribute nullable
   * @return nullable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Is attribute nullable")

  public Boolean getNullable() {
    return nullable;
  }


  public void setNullable(Boolean nullable) {
    this.nullable = nullable;
  }


  public Attribute fillValue(List<Integer> fillValue) {
    
    this.fillValue = fillValue;
    return this;
  }

  public Attribute addFillValueItem(Integer fillValueItem) {
    if (this.fillValue == null) {
      this.fillValue = new ArrayList<Integer>();
    }
    this.fillValue.add(fillValueItem);
    return this;
  }

   /**
   * The default fill value
   * @return fillValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default fill value")

  public List<Integer> getFillValue() {
    return fillValue;
  }


  public void setFillValue(List<Integer> fillValue) {
    this.fillValue = fillValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Attribute attribute = (Attribute) o;
    return Objects.equals(this.name, attribute.name) &&
        Objects.equals(this.type, attribute.type) &&
        Objects.equals(this.filterPipeline, attribute.filterPipeline) &&
        Objects.equals(this.cellValNum, attribute.cellValNum) &&
        Objects.equals(this.nullable, attribute.nullable) &&
        Objects.equals(this.fillValue, attribute.fillValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, filterPipeline, cellValNum, nullable, fillValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Attribute {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    filterPipeline: ").append(toIndentedString(filterPipeline)).append("\n");
    sb.append("    cellValNum: ").append(toIndentedString(cellValNum)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    fillValue: ").append(toIndentedString(fillValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

