/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Status details of a notebook server
 */
@ApiModel(description = "Status details of a notebook server")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class NotebookStatus {
  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_UPTIME = "uptime";
  @SerializedName(SERIALIZED_NAME_UPTIME)
  private Integer uptime;

  public static final String SERIALIZED_NAME_CPU_USAGE = "cpu_usage";
  @SerializedName(SERIALIZED_NAME_CPU_USAGE)
  private Integer cpuUsage;

  public static final String SERIALIZED_NAME_MEMORY_USAGE = "memory_usage";
  @SerializedName(SERIALIZED_NAME_MEMORY_USAGE)
  private Integer memoryUsage;

  public static final String SERIALIZED_NAME_MEMORY_LIMIT = "memory_limit";
  @SerializedName(SERIALIZED_NAME_MEMORY_LIMIT)
  private Integer memoryLimit;

  public static final String SERIALIZED_NAME_CPU_COUNT = "cpu_count";
  @SerializedName(SERIALIZED_NAME_CPU_COUNT)
  private Integer cpuCount;

  public NotebookStatus() { 
  }

  public NotebookStatus namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * namespace of notebook
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "namespace of notebook")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public NotebookStatus uptime(Integer uptime) {
    
    this.uptime = uptime;
    return this;
  }

   /**
   * duration notebook has been running in seconds
   * @return uptime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "120", value = "duration notebook has been running in seconds")

  public Integer getUptime() {
    return uptime;
  }


  public void setUptime(Integer uptime) {
    this.uptime = uptime;
  }


  public NotebookStatus cpuUsage(Integer cpuUsage) {
    
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * current cpu usage in millicpu
   * @return cpuUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4000", value = "current cpu usage in millicpu")

  public Integer getCpuUsage() {
    return cpuUsage;
  }


  public void setCpuUsage(Integer cpuUsage) {
    this.cpuUsage = cpuUsage;
  }


  public NotebookStatus memoryUsage(Integer memoryUsage) {
    
    this.memoryUsage = memoryUsage;
    return this;
  }

   /**
   * memory usage in bytes
   * @return memoryUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1073741824", value = "memory usage in bytes")

  public Integer getMemoryUsage() {
    return memoryUsage;
  }


  public void setMemoryUsage(Integer memoryUsage) {
    this.memoryUsage = memoryUsage;
  }


  public NotebookStatus memoryLimit(Integer memoryLimit) {
    
    this.memoryLimit = memoryLimit;
    return this;
  }

   /**
   * memory allocated to notebook server in bytes
   * @return memoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1073741824", value = "memory allocated to notebook server in bytes")

  public Integer getMemoryLimit() {
    return memoryLimit;
  }


  public void setMemoryLimit(Integer memoryLimit) {
    this.memoryLimit = memoryLimit;
  }


  public NotebookStatus cpuCount(Integer cpuCount) {
    
    this.cpuCount = cpuCount;
    return this;
  }

   /**
   * millicpu allocated to notebook server
   * @return cpuCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4000", value = "millicpu allocated to notebook server")

  public Integer getCpuCount() {
    return cpuCount;
  }


  public void setCpuCount(Integer cpuCount) {
    this.cpuCount = cpuCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotebookStatus notebookStatus = (NotebookStatus) o;
    return Objects.equals(this.namespace, notebookStatus.namespace) &&
        Objects.equals(this.uptime, notebookStatus.uptime) &&
        Objects.equals(this.cpuUsage, notebookStatus.cpuUsage) &&
        Objects.equals(this.memoryUsage, notebookStatus.memoryUsage) &&
        Objects.equals(this.memoryLimit, notebookStatus.memoryLimit) &&
        Objects.equals(this.cpuCount, notebookStatus.cpuCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespace, uptime, cpuUsage, memoryUsage, memoryLimit, cpuCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotebookStatus {\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    uptime: ").append(toIndentedString(uptime)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    memoryUsage: ").append(toIndentedString(memoryUsage)).append("\n");
    sb.append("    memoryLimit: ").append(toIndentedString(memoryLimit)).append("\n");
    sb.append("    cpuCount: ").append(toIndentedString(cpuCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

