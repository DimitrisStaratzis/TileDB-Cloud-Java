/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ResultFormat;

/**
 * A node specifying an SQL query to execute in TileDB Cloud. 
 */
@ApiModel(description = "A node specifying an SQL query to execute in TileDB Cloud. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class TGSQLNodeData {
  public static final String SERIALIZED_NAME_INIT_COMMANDS = "init_commands";
  @SerializedName(SERIALIZED_NAME_INIT_COMMANDS)
  private List<String> initCommands = null;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<Object> parameters = null;

  public static final String SERIALIZED_NAME_RESULT_FORMAT = "result_format";
  @SerializedName(SERIALIZED_NAME_RESULT_FORMAT)
  private ResultFormat resultFormat;

  public TGSQLNodeData() { 
  }

  public TGSQLNodeData initCommands(List<String> initCommands) {
    
    this.initCommands = initCommands;
    return this;
  }

  public TGSQLNodeData addInitCommandsItem(String initCommandsItem) {
    if (this.initCommands == null) {
      this.initCommands = new ArrayList<String>();
    }
    this.initCommands.add(initCommandsItem);
    return this;
  }

   /**
   * The commands to execute before running the query itself.
   * @return initCommands
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The commands to execute before running the query itself.")

  public List<String> getInitCommands() {
    return initCommands;
  }


  public void setInitCommands(List<String> initCommands) {
    this.initCommands = initCommands;
  }


  public TGSQLNodeData query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * The text of the SQL query to execute. Parameters are substituted in for &#x60;?&#x60;s, just as in a regular MariaDB query. 
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The text of the SQL query to execute. Parameters are substituted in for `?`s, just as in a regular MariaDB query. ")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public TGSQLNodeData parameters(List<Object> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public TGSQLNodeData addParametersItem(Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<Object>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * The parameters to substitute in for arguments in the &#x60;query&#x60;. Fixed-length. Arguments must be in JSON format. 
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parameters to substitute in for arguments in the `query`. Fixed-length. Arguments must be in JSON format. ")

  public List<Object> getParameters() {
    return parameters;
  }


  public void setParameters(List<Object> parameters) {
    this.parameters = parameters;
  }


  public TGSQLNodeData resultFormat(ResultFormat resultFormat) {
    
    this.resultFormat = resultFormat;
    return this;
  }

   /**
   * Get resultFormat
   * @return resultFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResultFormat getResultFormat() {
    return resultFormat;
  }


  public void setResultFormat(ResultFormat resultFormat) {
    this.resultFormat = resultFormat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TGSQLNodeData tgSQLNodeData = (TGSQLNodeData) o;
    return Objects.equals(this.initCommands, tgSQLNodeData.initCommands) &&
        Objects.equals(this.query, tgSQLNodeData.query) &&
        Objects.equals(this.parameters, tgSQLNodeData.parameters) &&
        Objects.equals(this.resultFormat, tgSQLNodeData.resultFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initCommands, query, parameters, resultFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TGSQLNodeData {\n");
    sb.append("    initCommands: ").append(toIndentedString(initCommands)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    resultFormat: ").append(toIndentedString(resultFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

