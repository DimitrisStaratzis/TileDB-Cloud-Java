/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.QueryRanges;
import org.openapitools.client.model.ResultFormat;
import org.openapitools.client.model.TGUDFArgument;
import org.openapitools.client.model.UDFArrayDetails;
import org.openapitools.client.model.UDFLanguage;
import org.openapitools.client.model.UDFSubarray;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * User-defined function
 */
@ApiModel(description = "User-defined function")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class MultiArrayUDF {
  public static final String SERIALIZED_NAME_UDF_INFO_NAME = "udf_info_name";
  @SerializedName(SERIALIZED_NAME_UDF_INFO_NAME)
  private String udfInfoName;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private UDFLanguage language;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "image_name";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_RESOURCE_CLASS = "resource_class";
  @SerializedName(SERIALIZED_NAME_RESOURCE_CLASS)
  private String resourceClass;

  public static final String SERIALIZED_NAME_EXEC = "exec";
  @SerializedName(SERIALIZED_NAME_EXEC)
  private String exec;

  public static final String SERIALIZED_NAME_EXEC_RAW = "exec_raw";
  @SerializedName(SERIALIZED_NAME_EXEC_RAW)
  private String execRaw;

  public static final String SERIALIZED_NAME_RESULT_FORMAT = "result_format";
  @SerializedName(SERIALIZED_NAME_RESULT_FORMAT)
  private ResultFormat resultFormat;

  public static final String SERIALIZED_NAME_TASK_NAME = "task_name";
  @SerializedName(SERIALIZED_NAME_TASK_NAME)
  private String taskName;

  public static final String SERIALIZED_NAME_ARGUMENT = "argument";
  @SerializedName(SERIALIZED_NAME_ARGUMENT)
  private String argument;

  public static final String SERIALIZED_NAME_ARGUMENTS_JSON = "arguments_json";
  @SerializedName(SERIALIZED_NAME_ARGUMENTS_JSON)
  private List<TGUDFArgument> argumentsJson = null;

  public static final String SERIALIZED_NAME_STORED_PARAM_UUIDS = "stored_param_uuids";
  @SerializedName(SERIALIZED_NAME_STORED_PARAM_UUIDS)
  private List<String> storedParamUuids = null;

  public static final String SERIALIZED_NAME_STORE_RESULTS = "store_results";
  @SerializedName(SERIALIZED_NAME_STORE_RESULTS)
  private Boolean storeResults;

  public static final String SERIALIZED_NAME_DONT_DOWNLOAD_RESULTS = "dont_download_results";
  @SerializedName(SERIALIZED_NAME_DONT_DOWNLOAD_RESULTS)
  private Boolean dontDownloadResults;

  public static final String SERIALIZED_NAME_RANGES = "ranges";
  @SerializedName(SERIALIZED_NAME_RANGES)
  private QueryRanges ranges;

  public static final String SERIALIZED_NAME_SUBARRAY = "subarray";
  @SerializedName(SERIALIZED_NAME_SUBARRAY)
  private UDFSubarray subarray;

  public static final String SERIALIZED_NAME_BUFFERS = "buffers";
  @SerializedName(SERIALIZED_NAME_BUFFERS)
  private List<String> buffers = null;

  public static final String SERIALIZED_NAME_ARRAYS = "arrays";
  @SerializedName(SERIALIZED_NAME_ARRAYS)
  private List<UDFArrayDetails> arrays = null;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout;

  public static final String SERIALIZED_NAME_TASK_GRAPH_UUID = "task_graph_uuid";
  @SerializedName(SERIALIZED_NAME_TASK_GRAPH_UUID)
  private String taskGraphUuid;

  public static final String SERIALIZED_NAME_CLIENT_NODE_UUID = "client_node_uuid";
  @SerializedName(SERIALIZED_NAME_CLIENT_NODE_UUID)
  private String clientNodeUuid;

  public MultiArrayUDF() { 
  }

  public MultiArrayUDF udfInfoName(String udfInfoName) {
    
    this.udfInfoName = udfInfoName;
    return this;
  }

   /**
   * name of UDFInfo to run, format is {namespace}/{udf_name}. Can not be used with exec
   * @return udfInfoName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TileDB-Inc/quickstart_median", value = "name of UDFInfo to run, format is {namespace}/{udf_name}. Can not be used with exec")

  public String getUdfInfoName() {
    return udfInfoName;
  }


  public void setUdfInfoName(String udfInfoName) {
    this.udfInfoName = udfInfoName;
  }


  public MultiArrayUDF language(UDFLanguage language) {
    
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UDFLanguage getLanguage() {
    return language;
  }


  public void setLanguage(UDFLanguage language) {
    this.language = language;
  }


  public MultiArrayUDF version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Type-specific version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type-specific version")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public MultiArrayUDF imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Docker image name to use for UDF
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Docker image name to use for UDF")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public MultiArrayUDF resourceClass(String resourceClass) {
    
    this.resourceClass = resourceClass;
    return this;
  }

   /**
   * The resource class to use for the UDF execution. Resource classes define resource limits for memory and CPUs. If this is empty, then the UDF will execute in the standard resource class of the TileDB Cloud provider. 
   * @return resourceClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "standard", value = "The resource class to use for the UDF execution. Resource classes define resource limits for memory and CPUs. If this is empty, then the UDF will execute in the standard resource class of the TileDB Cloud provider. ")

  public String getResourceClass() {
    return resourceClass;
  }


  public void setResourceClass(String resourceClass) {
    this.resourceClass = resourceClass;
  }


  public MultiArrayUDF exec(String exec) {
    
    this.exec = exec;
    return this;
  }

   /**
   * Type-specific executable text
   * @return exec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type-specific executable text")

  public String getExec() {
    return exec;
  }


  public void setExec(String exec) {
    this.exec = exec;
  }


  public MultiArrayUDF execRaw(String execRaw) {
    
    this.execRaw = execRaw;
    return this;
  }

   /**
   * optional raw text to store of serialized function, used for showing in UI
   * @return execRaw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "optional raw text to store of serialized function, used for showing in UI")

  public String getExecRaw() {
    return execRaw;
  }


  public void setExecRaw(String execRaw) {
    this.execRaw = execRaw;
  }


  public MultiArrayUDF resultFormat(ResultFormat resultFormat) {
    
    this.resultFormat = resultFormat;
    return this;
  }

   /**
   * Get resultFormat
   * @return resultFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResultFormat getResultFormat() {
    return resultFormat;
  }


  public void setResultFormat(ResultFormat resultFormat) {
    this.resultFormat = resultFormat;
  }


  public MultiArrayUDF taskName(String taskName) {
    
    this.taskName = taskName;
    return this;
  }

   /**
   * name of task, optional
   * @return taskName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "name of task, optional")

  public String getTaskName() {
    return taskName;
  }


  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }


  public MultiArrayUDF argument(String argument) {
    
    this.argument = argument;
    return this;
  }

   /**
   * Deprecated: Prefer to use &#x60;argument_json&#x60; instead. Argument(s) to pass to UDF function, tuple or list of args/kwargs which can be in native or JSON format 
   * @return argument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated: Prefer to use `argument_json` instead. Argument(s) to pass to UDF function, tuple or list of args/kwargs which can be in native or JSON format ")

  public String getArgument() {
    return argument;
  }


  public void setArgument(String argument) {
    this.argument = argument;
  }


  public MultiArrayUDF argumentsJson(List<TGUDFArgument> argumentsJson) {
    
    this.argumentsJson = argumentsJson;
    return this;
  }

  public MultiArrayUDF addArgumentsJsonItem(TGUDFArgument argumentsJsonItem) {
    if (this.argumentsJson == null) {
      this.argumentsJson = new ArrayList<TGUDFArgument>();
    }
    this.argumentsJson.add(argumentsJsonItem);
    return this;
  }

   /**
   * A series of key-value pairs to be passed as arguments into the UDF. See &#x60;TGUDFNodeData.arguments&#x60; for more information. If this format is used to pass arguments, arrays will be passed into the UDF as specified by the Node placeholders passed in here, rather than the classic method of putting all array arguments in the first parameter. Either this or &#x60;argument&#x60; should be set. 
   * @return argumentsJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A series of key-value pairs to be passed as arguments into the UDF. See `TGUDFNodeData.arguments` for more information. If this format is used to pass arguments, arrays will be passed into the UDF as specified by the Node placeholders passed in here, rather than the classic method of putting all array arguments in the first parameter. Either this or `argument` should be set. ")

  public List<TGUDFArgument> getArgumentsJson() {
    return argumentsJson;
  }


  public void setArgumentsJson(List<TGUDFArgument> argumentsJson) {
    this.argumentsJson = argumentsJson;
  }


  public MultiArrayUDF storedParamUuids(List<String> storedParamUuids) {
    
    this.storedParamUuids = storedParamUuids;
    return this;
  }

  public MultiArrayUDF addStoredParamUuidsItem(String storedParamUuidsItem) {
    if (this.storedParamUuids == null) {
      this.storedParamUuids = new ArrayList<String>();
    }
    this.storedParamUuids.add(storedParamUuidsItem);
    return this;
  }

   /**
   * The UUIDs of stored input parameters (passed in a language-specific format within \&quot;argument\&quot;) to be retrieved from the server-side cache. Serialized in standard hex format with no {}.
   * @return storedParamUuids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The UUIDs of stored input parameters (passed in a language-specific format within \"argument\") to be retrieved from the server-side cache. Serialized in standard hex format with no {}.")

  public List<String> getStoredParamUuids() {
    return storedParamUuids;
  }


  public void setStoredParamUuids(List<String> storedParamUuids) {
    this.storedParamUuids = storedParamUuids;
  }


  public MultiArrayUDF storeResults(Boolean storeResults) {
    
    this.storeResults = storeResults;
    return this;
  }

   /**
   * store results for later retrieval
   * @return storeResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "store results for later retrieval")

  public Boolean getStoreResults() {
    return storeResults;
  }


  public void setStoreResults(Boolean storeResults) {
    this.storeResults = storeResults;
  }


  public MultiArrayUDF dontDownloadResults(Boolean dontDownloadResults) {
    
    this.dontDownloadResults = dontDownloadResults;
    return this;
  }

   /**
   * Set to true to avoid downloading the results of this UDF. Useful for intermediate nodes in a task graph where you will not be using the results of your function. Defaults to false (\&quot;yes download results\&quot;).
   * @return dontDownloadResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true to avoid downloading the results of this UDF. Useful for intermediate nodes in a task graph where you will not be using the results of your function. Defaults to false (\"yes download results\").")

  public Boolean getDontDownloadResults() {
    return dontDownloadResults;
  }


  public void setDontDownloadResults(Boolean dontDownloadResults) {
    this.dontDownloadResults = dontDownloadResults;
  }


  public MultiArrayUDF ranges(QueryRanges ranges) {
    
    this.ranges = ranges;
    return this;
  }

   /**
   * Get ranges
   * @return ranges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QueryRanges getRanges() {
    return ranges;
  }


  public void setRanges(QueryRanges ranges) {
    this.ranges = ranges;
  }


  public MultiArrayUDF subarray(UDFSubarray subarray) {
    
    this.subarray = subarray;
    return this;
  }

   /**
   * Get subarray
   * @return subarray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UDFSubarray getSubarray() {
    return subarray;
  }


  public void setSubarray(UDFSubarray subarray) {
    this.subarray = subarray;
  }


  public MultiArrayUDF buffers(List<String> buffers) {
    
    this.buffers = buffers;
    return this;
  }

  public MultiArrayUDF addBuffersItem(String buffersItem) {
    if (this.buffers == null) {
      this.buffers = new ArrayList<String>();
    }
    this.buffers.add(buffersItem);
    return this;
  }

   /**
   * List of buffers to fetch (attributes + dimensions). Deprecated; please set arrays with &#x60;UDFArrayDetails&#x60;.
   * @return buffers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of buffers to fetch (attributes + dimensions). Deprecated; please set arrays with `UDFArrayDetails`.")

  public List<String> getBuffers() {
    return buffers;
  }


  public void setBuffers(List<String> buffers) {
    this.buffers = buffers;
  }


  public MultiArrayUDF arrays(List<UDFArrayDetails> arrays) {
    
    this.arrays = arrays;
    return this;
  }

  public MultiArrayUDF addArraysItem(UDFArrayDetails arraysItem) {
    if (this.arrays == null) {
      this.arrays = new ArrayList<UDFArrayDetails>();
    }
    this.arrays.add(arraysItem);
    return this;
  }

   /**
   * Array ranges/buffer into to run UDF on
   * @return arrays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array ranges/buffer into to run UDF on")

  public List<UDFArrayDetails> getArrays() {
    return arrays;
  }


  public void setArrays(List<UDFArrayDetails> arrays) {
    this.arrays = arrays;
  }


  public MultiArrayUDF timeout(Integer timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * UDF-type timeout in seconds (default: 900)
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UDF-type timeout in seconds (default: 900)")

  public Integer getTimeout() {
    return timeout;
  }


  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public MultiArrayUDF taskGraphUuid(String taskGraphUuid) {
    
    this.taskGraphUuid = taskGraphUuid;
    return this;
  }

   /**
   * If set, the ID of the log for the task graph that this was part of. 
   * @return taskGraphUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set, the ID of the log for the task graph that this was part of. ")

  public String getTaskGraphUuid() {
    return taskGraphUuid;
  }


  public void setTaskGraphUuid(String taskGraphUuid) {
    this.taskGraphUuid = taskGraphUuid;
  }


  public MultiArrayUDF clientNodeUuid(String clientNodeUuid) {
    
    this.clientNodeUuid = clientNodeUuid;
    return this;
  }

   /**
   * If set, the client-defined ID of the node within this task&#39;s graph. 
   * @return clientNodeUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set, the client-defined ID of the node within this task's graph. ")

  public String getClientNodeUuid() {
    return clientNodeUuid;
  }


  public void setClientNodeUuid(String clientNodeUuid) {
    this.clientNodeUuid = clientNodeUuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiArrayUDF multiArrayUDF = (MultiArrayUDF) o;
    return Objects.equals(this.udfInfoName, multiArrayUDF.udfInfoName) &&
        Objects.equals(this.language, multiArrayUDF.language) &&
        Objects.equals(this.version, multiArrayUDF.version) &&
        Objects.equals(this.imageName, multiArrayUDF.imageName) &&
        Objects.equals(this.resourceClass, multiArrayUDF.resourceClass) &&
        Objects.equals(this.exec, multiArrayUDF.exec) &&
        Objects.equals(this.execRaw, multiArrayUDF.execRaw) &&
        Objects.equals(this.resultFormat, multiArrayUDF.resultFormat) &&
        Objects.equals(this.taskName, multiArrayUDF.taskName) &&
        Objects.equals(this.argument, multiArrayUDF.argument) &&
        Objects.equals(this.argumentsJson, multiArrayUDF.argumentsJson) &&
        Objects.equals(this.storedParamUuids, multiArrayUDF.storedParamUuids) &&
        Objects.equals(this.storeResults, multiArrayUDF.storeResults) &&
        Objects.equals(this.dontDownloadResults, multiArrayUDF.dontDownloadResults) &&
        Objects.equals(this.ranges, multiArrayUDF.ranges) &&
        Objects.equals(this.subarray, multiArrayUDF.subarray) &&
        Objects.equals(this.buffers, multiArrayUDF.buffers) &&
        Objects.equals(this.arrays, multiArrayUDF.arrays) &&
        Objects.equals(this.timeout, multiArrayUDF.timeout) &&
        Objects.equals(this.taskGraphUuid, multiArrayUDF.taskGraphUuid) &&
        Objects.equals(this.clientNodeUuid, multiArrayUDF.clientNodeUuid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(udfInfoName, language, version, imageName, resourceClass, exec, execRaw, resultFormat, taskName, argument, argumentsJson, storedParamUuids, storeResults, dontDownloadResults, ranges, subarray, buffers, arrays, timeout, taskGraphUuid, clientNodeUuid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiArrayUDF {\n");
    sb.append("    udfInfoName: ").append(toIndentedString(udfInfoName)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    resourceClass: ").append(toIndentedString(resourceClass)).append("\n");
    sb.append("    exec: ").append(toIndentedString(exec)).append("\n");
    sb.append("    execRaw: ").append(toIndentedString(execRaw)).append("\n");
    sb.append("    resultFormat: ").append(toIndentedString(resultFormat)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    argument: ").append(toIndentedString(argument)).append("\n");
    sb.append("    argumentsJson: ").append(toIndentedString(argumentsJson)).append("\n");
    sb.append("    storedParamUuids: ").append(toIndentedString(storedParamUuids)).append("\n");
    sb.append("    storeResults: ").append(toIndentedString(storeResults)).append("\n");
    sb.append("    dontDownloadResults: ").append(toIndentedString(dontDownloadResults)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("    subarray: ").append(toIndentedString(subarray)).append("\n");
    sb.append("    buffers: ").append(toIndentedString(buffers)).append("\n");
    sb.append("    arrays: ").append(toIndentedString(arrays)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    taskGraphUuid: ").append(toIndentedString(taskGraphUuid)).append("\n");
    sb.append("    clientNodeUuid: ").append(toIndentedString(clientNodeUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

