/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Datatype;

/**
 * A set of 1D ranges for a subarray
 */
@ApiModel(description = "A set of 1D ranges for a subarray")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class SubarrayRanges {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Datatype type;

  public static final String SERIALIZED_NAME_HAS_DEFAULT_RANGE = "hasDefaultRange";
  @SerializedName(SERIALIZED_NAME_HAS_DEFAULT_RANGE)
  private Boolean hasDefaultRange;

  public static final String SERIALIZED_NAME_BUFFER = "buffer";
  @SerializedName(SERIALIZED_NAME_BUFFER)
  private List<Integer> buffer = null;

  public SubarrayRanges() { 
  }

  public SubarrayRanges type(Datatype type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Datatype getType() {
    return type;
  }


  public void setType(Datatype type) {
    this.type = type;
  }


  public SubarrayRanges hasDefaultRange(Boolean hasDefaultRange) {
    
    this.hasDefaultRange = hasDefaultRange;
    return this;
  }

   /**
   * True if the range is the default range
   * @return hasDefaultRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the range is the default range")

  public Boolean getHasDefaultRange() {
    return hasDefaultRange;
  }


  public void setHasDefaultRange(Boolean hasDefaultRange) {
    this.hasDefaultRange = hasDefaultRange;
  }


  public SubarrayRanges buffer(List<Integer> buffer) {
    
    this.buffer = buffer;
    return this;
  }

  public SubarrayRanges addBufferItem(Integer bufferItem) {
    if (this.buffer == null) {
      this.buffer = new ArrayList<Integer>();
    }
    this.buffer.add(bufferItem);
    return this;
  }

   /**
   * The bytes of the ranges
   * @return buffer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The bytes of the ranges")

  public List<Integer> getBuffer() {
    return buffer;
  }


  public void setBuffer(List<Integer> buffer) {
    this.buffer = buffer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubarrayRanges subarrayRanges = (SubarrayRanges) o;
    return Objects.equals(this.type, subarrayRanges.type) &&
        Objects.equals(this.hasDefaultRange, subarrayRanges.hasDefaultRange) &&
        Objects.equals(this.buffer, subarrayRanges.buffer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, hasDefaultRange, buffer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubarrayRanges {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    hasDefaultRange: ").append(toIndentedString(hasDefaultRange)).append("\n");
    sb.append("    buffer: ").append(toIndentedString(buffer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

