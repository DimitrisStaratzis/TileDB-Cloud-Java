/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Copied notebook uri and information
 */
@ApiModel(description = "Copied notebook uri and information")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class NotebookCopied {
  public static final String SERIALIZED_NAME_OUTPUT_URI = "output_uri";
  @SerializedName(SERIALIZED_NAME_OUTPUT_URI)
  private String outputUri;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public NotebookCopied() { 
  }

  public NotebookCopied outputUri(String outputUri) {
    
    this.outputUri = outputUri;
    return this;
  }

   /**
   * output location of the TileDB Notebook
   * @return outputUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "output location of the TileDB Notebook")

  public String getOutputUri() {
    return outputUri;
  }


  public void setOutputUri(String outputUri) {
    this.outputUri = outputUri;
  }


  public NotebookCopied name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * name of the notebook created
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "name of the notebook created")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public NotebookCopied namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * namespace copied to
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "namespace copied to")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public NotebookCopied id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique ID of the copied notebook
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", required = true, value = "unique ID of the copied notebook")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotebookCopied notebookCopied = (NotebookCopied) o;
    return Objects.equals(this.outputUri, notebookCopied.outputUri) &&
        Objects.equals(this.name, notebookCopied.name) &&
        Objects.equals(this.namespace, notebookCopied.namespace) &&
        Objects.equals(this.id, notebookCopied.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputUri, name, namespace, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotebookCopied {\n");
    sb.append("    outputUri: ").append(toIndentedString(outputUri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

