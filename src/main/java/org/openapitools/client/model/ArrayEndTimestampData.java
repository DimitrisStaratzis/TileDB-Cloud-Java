/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.PaginationMetadata;

/**
 * Object including array end_timestamps (list of Unix epoch timestamps in milliseconds) and pagination metadata
 */
@ApiModel(description = "Object including array end_timestamps (list of Unix epoch timestamps in milliseconds) and pagination metadata")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class ArrayEndTimestampData {
  public static final String SERIALIZED_NAME_END_TIMESTAMPS = "end_timestamps";
  @SerializedName(SERIALIZED_NAME_END_TIMESTAMPS)
  private List<Integer> endTimestamps = null;

  public static final String SERIALIZED_NAME_PAGINATION_METADATA = "pagination_metadata";
  @SerializedName(SERIALIZED_NAME_PAGINATION_METADATA)
  private PaginationMetadata paginationMetadata;

  public ArrayEndTimestampData() { 
  }

  public ArrayEndTimestampData endTimestamps(List<Integer> endTimestamps) {
    
    this.endTimestamps = endTimestamps;
    return this;
  }

  public ArrayEndTimestampData addEndTimestampsItem(Integer endTimestampsItem) {
    if (this.endTimestamps == null) {
      this.endTimestamps = new ArrayList<Integer>();
    }
    this.endTimestamps.add(endTimestampsItem);
    return this;
  }

   /**
   * List of timestamps expressed in milliseconds since Unix epoch
   * @return endTimestamps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of timestamps expressed in milliseconds since Unix epoch")

  public List<Integer> getEndTimestamps() {
    return endTimestamps;
  }


  public void setEndTimestamps(List<Integer> endTimestamps) {
    this.endTimestamps = endTimestamps;
  }


  public ArrayEndTimestampData paginationMetadata(PaginationMetadata paginationMetadata) {
    
    this.paginationMetadata = paginationMetadata;
    return this;
  }

   /**
   * Get paginationMetadata
   * @return paginationMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaginationMetadata getPaginationMetadata() {
    return paginationMetadata;
  }


  public void setPaginationMetadata(PaginationMetadata paginationMetadata) {
    this.paginationMetadata = paginationMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArrayEndTimestampData arrayEndTimestampData = (ArrayEndTimestampData) o;
    return Objects.equals(this.endTimestamps, arrayEndTimestampData.endTimestamps) &&
        Objects.equals(this.paginationMetadata, arrayEndTimestampData.paginationMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTimestamps, paginationMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArrayEndTimestampData {\n");
    sb.append("    endTimestamps: ").append(toIndentedString(endTimestamps)).append("\n");
    sb.append("    paginationMetadata: ").append(toIndentedString(paginationMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

