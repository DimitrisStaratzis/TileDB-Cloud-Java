/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Subarray;

/**
 * The current partition info
 */
@ApiModel(description = "The current partition info")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class SubarrayPartitionerCurrent {
  public static final String SERIALIZED_NAME_SUBARRAY = "subarray";
  @SerializedName(SERIALIZED_NAME_SUBARRAY)
  private Subarray subarray;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private Integer start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private Integer end;

  public static final String SERIALIZED_NAME_SPLIT_MULTI_RANGE = "splitMultiRange";
  @SerializedName(SERIALIZED_NAME_SPLIT_MULTI_RANGE)
  private Boolean splitMultiRange;

  public SubarrayPartitionerCurrent() { 
  }

  public SubarrayPartitionerCurrent subarray(Subarray subarray) {
    
    this.subarray = subarray;
    return this;
  }

   /**
   * Get subarray
   * @return subarray
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Subarray getSubarray() {
    return subarray;
  }


  public void setSubarray(Subarray subarray) {
    this.subarray = subarray;
  }


  public SubarrayPartitionerCurrent start(Integer start) {
    
    this.start = start;
    return this;
  }

   /**
   * PartitionInfo start
   * @return start
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PartitionInfo start")

  public Integer getStart() {
    return start;
  }


  public void setStart(Integer start) {
    this.start = start;
  }


  public SubarrayPartitionerCurrent end(Integer end) {
    
    this.end = end;
    return this;
  }

   /**
   * PartitionInfo end
   * @return end
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PartitionInfo end")

  public Integer getEnd() {
    return end;
  }


  public void setEnd(Integer end) {
    this.end = end;
  }


  public SubarrayPartitionerCurrent splitMultiRange(Boolean splitMultiRange) {
    
    this.splitMultiRange = splitMultiRange;
    return this;
  }

   /**
   * PartitionInfo splitMultiRange
   * @return splitMultiRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PartitionInfo splitMultiRange")

  public Boolean getSplitMultiRange() {
    return splitMultiRange;
  }


  public void setSplitMultiRange(Boolean splitMultiRange) {
    this.splitMultiRange = splitMultiRange;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubarrayPartitionerCurrent subarrayPartitionerCurrent = (SubarrayPartitionerCurrent) o;
    return Objects.equals(this.subarray, subarrayPartitionerCurrent.subarray) &&
        Objects.equals(this.start, subarrayPartitionerCurrent.start) &&
        Objects.equals(this.end, subarrayPartitionerCurrent.end) &&
        Objects.equals(this.splitMultiRange, subarrayPartitionerCurrent.splitMultiRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subarray, start, end, splitMultiRange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubarrayPartitionerCurrent {\n");
    sb.append("    subarray: ").append(toIndentedString(subarray)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    splitMultiRange: ").append(toIndentedString(splitMultiRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

