/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Datatype;
import org.openapitools.client.model.DimensionTileExtent;
import org.openapitools.client.model.DomainArray;
import org.openapitools.client.model.FilterPipeline;

/**
 * Dimension of array
 */
@ApiModel(description = "Dimension of array")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-19T15:04:32.581406+03:00[Europe/Athens]")
public class Dimension {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Datatype type;

  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private DomainArray domain;

  public static final String SERIALIZED_NAME_NULL_TILE_EXTENT = "nullTileExtent";
  @SerializedName(SERIALIZED_NAME_NULL_TILE_EXTENT)
  private Boolean nullTileExtent;

  public static final String SERIALIZED_NAME_TILE_EXTENT = "tileExtent";
  @SerializedName(SERIALIZED_NAME_TILE_EXTENT)
  private DimensionTileExtent tileExtent;

  public static final String SERIALIZED_NAME_FILTER_PIPELINE = "filterPipeline";
  @SerializedName(SERIALIZED_NAME_FILTER_PIPELINE)
  private FilterPipeline filterPipeline;

  public Dimension() { 
  }

  public Dimension name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Dimension name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "row", value = "Dimension name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Dimension type(Datatype type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Datatype getType() {
    return type;
  }


  public void setType(Datatype type) {
    this.type = type;
  }


  public Dimension domain(DomainArray domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public DomainArray getDomain() {
    return domain;
  }


  public void setDomain(DomainArray domain) {
    this.domain = domain;
  }


  public Dimension nullTileExtent(Boolean nullTileExtent) {
    
    this.nullTileExtent = nullTileExtent;
    return this;
  }

   /**
   * Is tile extent null
   * @return nullTileExtent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "true", required = true, value = "Is tile extent null")

  public Boolean getNullTileExtent() {
    return nullTileExtent;
  }


  public void setNullTileExtent(Boolean nullTileExtent) {
    this.nullTileExtent = nullTileExtent;
  }


  public Dimension tileExtent(DimensionTileExtent tileExtent) {
    
    this.tileExtent = tileExtent;
    return this;
  }

   /**
   * Get tileExtent
   * @return tileExtent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DimensionTileExtent getTileExtent() {
    return tileExtent;
  }


  public void setTileExtent(DimensionTileExtent tileExtent) {
    this.tileExtent = tileExtent;
  }


  public Dimension filterPipeline(FilterPipeline filterPipeline) {
    
    this.filterPipeline = filterPipeline;
    return this;
  }

   /**
   * Get filterPipeline
   * @return filterPipeline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FilterPipeline getFilterPipeline() {
    return filterPipeline;
  }


  public void setFilterPipeline(FilterPipeline filterPipeline) {
    this.filterPipeline = filterPipeline;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dimension dimension = (Dimension) o;
    return Objects.equals(this.name, dimension.name) &&
        Objects.equals(this.type, dimension.type) &&
        Objects.equals(this.domain, dimension.domain) &&
        Objects.equals(this.nullTileExtent, dimension.nullTileExtent) &&
        Objects.equals(this.tileExtent, dimension.tileExtent) &&
        Objects.equals(this.filterPipeline, dimension.filterPipeline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, domain, nullTileExtent, tileExtent, filterPipeline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dimension {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    nullTileExtent: ").append(toIndentedString(nullTileExtent)).append("\n");
    sb.append("    tileExtent: ").append(toIndentedString(tileExtent)).append("\n");
    sb.append("    filterPipeline: ").append(toIndentedString(filterPipeline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

