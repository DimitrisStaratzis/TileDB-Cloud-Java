/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.2.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.threeten.bp.OffsetDateTime;
import org.openapitools.client.model.TaskGraphClientNodeStatus;
import org.openapitools.client.model.TaskGraphLog;
import org.openapitools.client.model.TaskGraphLogsData;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskGraphLogsApi
 */
@Ignore
public class TaskGraphLogsApiTest {

    private final TaskGraphLogsApi api = new TaskGraphLogsApi();

    
    /**
     * 
     *
     * Create a task graph log.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTaskGraphLogTest() throws ApiException {
        String namespace = null;
        TaskGraphLog log = null;
                TaskGraphLog response = api.createTaskGraphLog(namespace, log);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Fetch information about a single task graph execution. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaskGraphLogTest() throws ApiException {
        String namespace = null;
        String id = null;
                TaskGraphLog response = api.getTaskGraphLog(namespace, id);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Fetch the task graph logs of a namespace the user has access to. The returned entries will include only summary data, and will not include information about the individual tasks that were executed. (This information is available when requesting an individual task graph log.) Entries in the response are ordered from newest to oldest. Pagination parameters work as in other API methods; see PaginationMetadata. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTaskGraphLogsTest() throws ApiException {
        String namespace = null;
        String createdBy = null;
        String search = null;
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        Integer page = null;
        Integer perPage = null;
                TaskGraphLogsData response = api.listTaskGraphLogs(namespace, createdBy, search, startTime, endTime, page, perPage);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reportClientNodeTest() throws ApiException {
        String namespace = null;
        String id = null;
        TaskGraphClientNodeStatus report = null;
                api.reportClientNode(namespace, id, report);
        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update information about a single task graph execution. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaskGraphLogTest() throws ApiException {
        String namespace = null;
        String id = null;
        TaskGraphLog log = null;
                api.updateTaskGraphLog(namespace, id, log);
        // TODO: test validations
    }
    
}
