name: TileDB-Cloud-Java

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - master
      - test-*
  pull_request:

jobs:
  Examples:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
          check-latest: true

      - run: |
          unset SYSTEM
          ./gradlew assemble;
        shell: bash
        name: assemble

      - name: Run examples
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          cd build/libs
          rm *javadoc* *sources* *default*
          p=$(readlink -f *.jar)
          cd ../../src/main/java/examples
          javac -cp $p *.java
          for x in $(ls -1 *.java | sed 's/.java//'); 
          do 
          echo $x;
          class_name=examples.$x; 
          java -cp $p $class_name; 
          done
  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Examples]
    name: Create-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      - name: Create-Jars
        run: unset SYSTEM; set +e; ./gradlew assemble; ./gradlew shadowJar; mkdir jars/; cp ./build/libs/*.jar jars/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: jars/*.jar
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false

      - name: Upload to maven
        run: |
          chmod +x ./ci/upload_to_maven.sh
          ./ci/upload_to_maven.sh
        shell: bash
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_SECRET_KEYS_ENC: ${{ secrets.GPG_SECRET_KEYS_ENC }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}